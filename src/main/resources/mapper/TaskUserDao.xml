<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.dao.TaskUserDao">
    <resultMap id="BaseResultMap" type="com.ai.domain.bo.TaskUser">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="task_id" jdbcType="BIGINT" property="taskId" />
        <result column="mobile" jdbcType="CHAR" property="mobile" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="time" jdbcType="INTEGER" property="time" />
        <result column="type" jdbcType="TINYINT" property="type" />
        <result column="share" jdbcType="BIT" property="share" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="called_at" jdbcType="TIMESTAMP" property="calledAt" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ai.domain.bo.TaskUser">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Base_Column_List">
    id, task_id, mobile, `status`, `time`, `type`, `share`, `name`, remark, called_at
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectTaskUserListByConditions"  resultMap="BaseResultMap">

    select u.* from task_user u
    left join task t on u.task_id = t.id
    where 1=1
      and  u.task_id = #{taskId}
     <if test="userId != null and userId != ''">
         AND t.user_id =  #{userId}
     </if>
    <if test="name != null and name != ''">
      AND u.`name`  LIKE  CONCAT('%',#{name},'%')
    </if>
    <if test="type != null and type != ''">
      AND u.`type` = #{type}
    </if>
    <if test="share != null and share != ''">
      AND u.`share` = #{share}
    </if>
    <if test="status != null and status != ''">
       AND u.`status` = #{status}
    </if>
    order by u.called_at desc
  </select>

    <select id="getAllTaskUsers" resultMap="BaseResultMap">
        select u.* from task_user u
          left join task t on u.task_id = t.id
        where  t.user_id=#{user_id}
          and u.task_id=#{task_id}
          order by u.id desc ;
    </select>

    <select id="getTaskUserByTaskId" resultMap="BaseResultMap">
        select u.* from task_user u
        where  u.task_id=#{task_id}
         and u.status=1
        order by  u.id limit 5;
    </select>


    <insert id="insertBatch">
    INSERT INTO task_user
      (task_id, name, mobile,remark,called_at)
    VALUES
    <foreach collection ="list" item="TaskUser" separator =",">
      (#{TaskUser.taskId}, #{TaskUser.name}, #{TaskUser.mobile}, #{TaskUser.remark}, #{TaskUser.calledAt})
    </foreach >
  </insert>

    <select id="getCountTaskUser" resultType="Map">
      select type ,count(type) num ,t2.called_at date from
        task_user t2   left join  task t  on t.id = t2.task_id
      where t.user_id=#{userId}
        and t2.`status` = 0
        and t2.called_at  between  #{staTime} and #{endTime}
        group by t2.called_at,type  order by t2.called_at;
    </select>

    <select id="getCountTaskUserToDo" resultType="java.lang.Integer">
        select count(*) from
          task_user t2   left join  task t  on t.id = t2.task_id
        where t.user_id=#{userId}  and t2.status!=0;
    </select>

    <select id="countUserTypeByTaskId" resultType="Map">
        select type ,count(type) num from
          task_user t
        where t.task_id = #{taskId}
          group by type  order by type;
     </select>
</mapper>
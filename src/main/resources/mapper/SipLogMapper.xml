<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.dao.SipLogMapper">
  <resultMap id="BaseResultMap" type="com.ai.domain.bo.SipLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createAt" jdbcType="DATE" property="createat" />
    <result column="accepter" jdbcType="VARCHAR" property="accepter" />
    <result column="handler" jdbcType="VARCHAR" property="handler" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="result" jdbcType="BIGINT" property="result" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createAt, accepter, `handler`, num, `result`
  </sql>
  <select id="selectByExample" parameterType="com.ai.domain.bo.SipLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sip_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sip_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sip_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.domain.bo.SipLogExample">
    delete from sip_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.domain.bo.SipLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sip_log (createAt, accepter, `handler`, 
      num, `result`)
    values (#{createat,jdbcType=DATE}, #{accepter,jdbcType=VARCHAR}, #{handler,jdbcType=VARCHAR}, 
      #{num,jdbcType=VARCHAR}, #{result,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.domain.bo.SipLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sip_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createat != null">
        createAt,
      </if>
      <if test="accepter != null">
        accepter,
      </if>
      <if test="handler != null">
        `handler`,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="result != null">
        `result`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createat != null">
        #{createat,jdbcType=DATE},
      </if>
      <if test="accepter != null">
        #{accepter,jdbcType=VARCHAR},
      </if>
      <if test="handler != null">
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.domain.bo.SipLogExample" resultType="java.lang.Long">
    select count(*) from sip_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sip_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createat != null">
        createAt = #{record.createat,jdbcType=DATE},
      </if>
      <if test="record.accepter != null">
        accepter = #{record.accepter,jdbcType=VARCHAR},
      </if>
      <if test="record.handler != null">
        `handler` = #{record.handler,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        `result` = #{record.result,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sip_log
    set id = #{record.id,jdbcType=BIGINT},
      createAt = #{record.createat,jdbcType=DATE},
      accepter = #{record.accepter,jdbcType=VARCHAR},
      `handler` = #{record.handler,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=VARCHAR},
      `result` = #{record.result,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.domain.bo.SipLog">
    update sip_log
    <set>
      <if test="createat != null">
        createAt = #{createat,jdbcType=DATE},
      </if>
      <if test="accepter != null">
        accepter = #{accepter,jdbcType=VARCHAR},
      </if>
      <if test="handler != null">
        `handler` = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        `result` = #{result,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.domain.bo.SipLog">
    update sip_log
    set createAt = #{createat,jdbcType=DATE},
      accepter = #{accepter,jdbcType=VARCHAR},
      `handler` = #{handler,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      `result` = #{result,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.dao.TaskMapper">
  <resultMap id="BaseResultMap" type="com.ai.domain.bo.Task">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="thread" jdbcType="INTEGER" property="thread" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="called" jdbcType="INTEGER" property="called" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="start_at" jdbcType="TIMESTAMP" property="startAt" />
    <result column="finish_at" jdbcType="TIMESTAMP" property="finishAt" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="test" jdbcType="BIT" property="test" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, template_id, thread, total, called, created_at, start_at, finish_at, 
    status, test
  </sql>
  <select id="selectByExample" parameterType="com.ai.domain.bo.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.domain.bo.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.domain.bo.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task (user_id, template_id, thread, 
      total, called, created_at, 
      start_at, finish_at, status, 
      test)
    values (#{userId,jdbcType=BIGINT}, #{templateId,jdbcType=BIGINT}, #{thread,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{called,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{startAt,jdbcType=TIMESTAMP}, #{finishAt,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{test,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.domain.bo.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="thread != null">
        thread,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="called != null">
        called,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="startAt != null">
        start_at,
      </if>
      <if test="finishAt != null">
        finish_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="test != null">
        test,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="thread != null">
        #{thread,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="called != null">
        #{called,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null">
        #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="test != null">
        #{test,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.domain.bo.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=BIGINT},
      </if>
      <if test="record.thread != null">
        thread = #{record.thread,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.called != null">
        called = #{record.called,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startAt != null">
        start_at = #{record.startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishAt != null">
        finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.test != null">
        test = #{record.test,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      template_id = #{record.templateId,jdbcType=BIGINT},
      thread = #{record.thread,jdbcType=INTEGER},
      total = #{record.total,jdbcType=INTEGER},
      called = #{record.called,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      start_at = #{record.startAt,jdbcType=TIMESTAMP},
      finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      test = #{record.test,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.domain.bo.Task">
    update task
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="thread != null">
        thread = #{thread,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="called != null">
        called = #{called,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        start_at = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null">
        finish_at = #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="test != null">
        test = #{test,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.domain.bo.Task">
    update task
    set user_id = #{userId,jdbcType=BIGINT},
      template_id = #{templateId,jdbcType=BIGINT},
      thread = #{thread,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      called = #{called,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      finish_at = #{finishAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      test = #{test,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>